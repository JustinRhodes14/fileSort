fileSort.c - A user's guide on how to use the program

Authors: Justin Rhodes (jgr85) & Gregorio Fuerte (grf27)

RUNNING THE CODE

In order to run the program, the user must choose between the two sort flags quicksort (-q) , or insertion sort (-i), as well as a file. In order to run the program, you first must compile using gcc fileSort.c, and run it using ./a.out <sort_flag> <file_name>

Note: Everything to run the program is case sensitive, the file name must match the file exactly, and the sort flags must match exactly how they are listed in this man page, otherwise an error message will be printed


HOW IT WORKS

On success, the code will open the file via open(), and then read the file using the read() function, which will read through the entire file and tokenize values according to commas. The code will detect what type of data you are dealing with based on the first input, it checks for whether or not the first letter is a digit, and also checks for whether or not there is a negative sign present since that would also indicate it is an integer file. After tokenizing the file, we insert all the data into a linked list, and given the user input, we will call either insertion sort or quick sort accordingly. By keeping track of the linked list size beforehand, we are able to convert the linked list into an array, sort the data, then store it bcak in the linked list and print it out.

ERRORS

If the file given is empty, a warning will be printed out and the program will exit since there is nothing to sort. If the file does not exist, a fatal error will be returned since the file cannot be sorted. If the parameters to run the program are wrong, or missing a requirement, the program will return a fatal error indicating you have not inputted a valid sort flag, or file name.
